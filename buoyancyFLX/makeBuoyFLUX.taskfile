#!/bin/bash
##MSUB -r dotar<XXMONTHXX>
#MSUB -n 1
#MSUB -T 3600
#MSUB -q skylake
#MSUB -o ../OUT/dotar<XXMONTHXX>.o%I
#MSUB -e ../OUT/dotar<XXMONTHXX>.e%I
#MSUB -A gen7420
#MSUB -m work,scratch

function ProgressBar {
# Process data
    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done
# Build progressbar string lengths
    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

# 1.2 Build progressbar strings and print the ProgressBar line
# 1.2.1 Output example:                           
# 1.2.1.1 Progress : [########################################] 100%
printf "\rProgress : [${_fill// /#}${_empty// /-}] ${_progress}%%"

}

SEDNA_output="/ccc/scratch/cont003/ra5563/talandel/SEDNA/SEDNA-DELTA-S/REBLD"
FREQ="1d"

output_postprocc="/ccc/cont003/dsku/blanchet/home/user/ifremer/martinej/scratch/BUOYFLX/"
tmp_folder="/ccc/cont003/dsku/blanchet/home/user/ifremer/martinej/scratch/tmp"

# Find all files with the pattern gridT
gridTfilestr=`find "$SEDNA_output/$FREQ" -type f -name "*gridT.nc"`

# Make array of the string
gridTfiles=($gridTfilestr)

# Number of files
n_files=$((${#gridTfiles[@]}-1))

echo "" > taskfile.list

for file in $(seq 0 $n_files)
do 
    
    # Get shared filename between variables (gridT,gridS,etc)
    gridTfile=${gridTfiles[$file]}
    delimiter='gridT.nc'
    divfilename=${gridTfile%%"$delimiter"*}    

    string2inject="-t ${gridTfile}"
    string2inject="$string2inject -s ${divfilename}gridS.nc"

    # Separate name for montly flux files
    IFS='d' read -r -a flxname <<< "$divfilename"
    filefluxname=${flxname[0]}d${flxname[1]}d${flxname[2]}
    fileflux_montly="${filefluxname}.1d_flxT.nc"

    # Get index of date from daily output to extract from monthly flux files
    flxdatestr=$(echo ${flxname[3]} | cut -d. -f1)
    flxdate=${flxdatestr#0}    
    
    IFS='/' read -r -a filename <<< "$divfilename"
    outputfile=$output_postprocc${filename[-1]}
    
    string2inject="$string2inject -f ${tmp_folder}/${filename[-1]}flxT.nc"

    string2inject="$string2inject -o ${outputfile}buoyFLX_fix.nc"
    string2inject="$string2inject -short"
    
    counter=$(printf "%05d" $file)
    task_file="JOBS/compute_buoy_${counter}.sh"

    echo "cd $PWD" > $task_file
    echo "" >> $task_file
    echo "bash split_file.template $fileflux_montly ${tmp_folder}/${filename[-1]}flxT.nc $flxdate" >> $task_file
    echo "" >> $task_file
    #echo "module load netcdf-fortran/4.5.3  > /dev/null" >> $task_file
    echo "" >> $task_file
    echo "cdfbuoyflx_fix ${string2inject}" >> $task_file
    
    # Master to run in parallel or sequential
    echo "bash $task_file" >> taskfile.list

    ProgressBar ${file} ${n_files}
done
